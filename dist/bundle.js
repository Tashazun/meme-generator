!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=28)}([function(e,t,n){"use strict";e.exports=n(27)},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,i,a,l,u){if(r(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,i,a,l,u],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var c in n=Object(arguments[u]))o.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(l[a[s]]=n[a[s]])}}return l}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),u=null,c=0,s=[],f=n(5);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(y(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(y(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function h(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function m(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function v(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),g(t,e.attrs),h(e,t),t}function g(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function y(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=u||(u=v(t)),r=k.bind(null,n,a,!1),o=k.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",g(t,e.attrs),h(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){m(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(l=i[a.id]).refs--,r.push(l)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete i[l.id]}}}};var b,w=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function k(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){(e.exports=n(7)(!1)).push([e.i,"body {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-family: sans-serif;\r\n    color: #111;\r\n  }\r\n\r\nh1, h2 {\r\n    text-align: center;\r\n}\r\n\r\nfieldset {\r\n    border: none;\r\n}\r\n\r\n#form {\r\n    display: grid;\r\n    grid-template-columns: 20% 2fr;\r\n    grid-gap: 5%;\r\n}\r\n#section {\r\n    display: flex;\r\n}\r\n\r\n#form label {\r\n    grid-column: 1 / 2;\r\n}\r\n \r\n#form input,\r\nbutton {\r\n    grid-column: 2 / 3;\r\n}\r\n\r\n\r\n.image-container {\r\n    position: relative;\r\n}\r\n\r\n#memeHeader {\r\n    position: absolute;\r\n    top: 25%;\r\n    left: 10%;\r\n}\r\n\r\n#memeFooter {\r\n    position: absolute;\r\n    top: 85%;\r\n    left: 40%;\r\n}\r\n\r\n#topImage {\r\n    position: absolute;\r\n    top: 8%;\r\n    left: 68%;\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n\r\n",""])},function(e,t,n){var r=n(8);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(6)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){!function(e){"use strict";function t(e){var t=document.createElement("canvas"),n=t.getContext("2d"),r="abcdefghijklmnopqrstuvwxyz0123456789";n.font="72px monospace";var o=n.measureText(r).width;n.font="72px '"+e+"', monospace";var i=n.measureText(r).width;return t=null,i!=o}function n(e){return e.family.replace(/\s+/g,"-").toLowerCase()}function r(e,t,n){var r="https://fonts.googleapis.com/css?family=";r+=e.family.replace(/ /g,"+"),r+=":"+t[0];for(var o=1;o<t.length;o+=1)r+="|"+t[o];if(!0===n){var i=e.family;i=(i=i.replace(/\s+/g,"")).split("").filter(function(e,t,n){return n.indexOf(e)===t}).join(""),r+="&text="+i}return r}function o(e,t,n,o){var i=r(e,n,!1),a=document.createElement("link");a.rel="stylesheet",a.href=i,a.id="font-full-"+t,o&&(a.onload=function(){o(e)}),document.head.appendChild(a)}function i(e,r,i){var a=n(e);document.getElementById("font-preview-"+a)?(document.getElementById("font-preview-"+a).outerHTML="",o(e,a,r,i)):document.getElementById("font-full-"+a)||t(e.family)?i&&i(e):o(e,a,r,i)}function a(e,o){var i=n(e);document.getElementById("font-full-"+i)||t(e.family)||function(e,t,n){var o=r(e,n,!0),i=document.createElement("link");i.rel="stylesheet",i.href=o,i.id="font-preview-"+t,document.head.appendChild(i)}(e,i,o)}var l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},c=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),s=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},f=function(){function e(t,n,r){u(this,e),this.pickerSelector=""!==t?"-"+t:"",this.stylesheet=document.createElement("style"),this.stylesheet.rel="stylesheet",this.stylesheet.type="text/css";var o=r[0].split(/(\d+)/).filter(Boolean);if(1===o.length)if("regular"===o[0]||"italic"===o[0]){var i=s(o,1);this.fontStyle=i[0],this.fontWeight="400"}else{this.fontStyle="regular";var a=s(o,1);this.fontWeight=a[0]}else if(2===o.length){var l=s(o,2);this.fontWeight=l[0],this.fontStyle=l[1]}var c="\n\t\t\t.apply-font"+this.pickerSelector+' {\n\t\t\t\tfont-family: "'+n.family+'";\n\t\t\t\tfont-style: '+this.fontStyle+";\n\t\t\t\tfont-weight: "+this.fontWeight+";\n\t\t\t}\n\t\t";this.stylesheet.appendChild(document.createTextNode(c)),document.head.appendChild(this.stylesheet)}return c(e,[{key:"applyPreviewStyle",value:function(e){var t=e.family.replace(/\s+/g,"-").toLowerCase(),n="\n\t\t\t.font-"+t+' {\n\t\t\t\tfont-family: "'+e.family+'";\n\t\t\t\tfont-style: '+this.fontStyle+";\n\t\t\t\tfont-weight: "+this.fontWeight+";\n\t\t\t}\n\t\t";this.stylesheet.appendChild(document.createTextNode(n))}},{key:"changeActiveStyle",value:function(e,t){var n="handwriting"===e.category?"cursive":e.category,r="\n\t\t\t.apply-font"+this.pickerSelector+' {\n\t\t\t\tfont-family: "'+e.family+'", "'+t+'", '+n+";\n\t\t\t\tfont-style: "+this.fontStyle+";\n\t\t\t\tfont-weight: "+this.fontWeight+";\n\t\t\t}\n\t\t";this.stylesheet.replaceChild(document.createTextNode(r),this.stylesheet.childNodes[0])}}]),e}(),d=function(){function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=arguments[3];u(this,e),e.validateParameters(t,n,r,o);var a=n||"Open Sans",l=e.setDefaultOptions(r);this.apiKey=t,this.onChange=o,this.options=l,this.activeFont={family:a,variants:"regular"},this.fonts=[],this.previewIndex=0,i(this.activeFont,this.options.variants),this.styleManager=new f(this.options.name,this.activeFont,this.options.variants)}return c(e,null,[{key:"validateParameters",value:function(e,t,n,r){if(!e||"string"!=typeof e)throw Error("apiKey parameter is not a string or missing");if(t&&"string"!=typeof t)throw Error("defaultFont parameter is not a string");if("object"!==(void 0===n?"undefined":l(n)))throw Error("options parameter is not an object");if(n.name){if("string"!=typeof n.name)throw Error("options.name parameter is not a string");if(n.name.match(/[^0-9a-z]/i))throw Error("options.name may only contain letters and digits")}if(n.families&&!(n.families instanceof Array))throw Error("options.families parameter is not an array");if(n.categories&&!(n.categories instanceof Array))throw Error("options.categories parameter is not an array");if(n.variants&&!(n.variants instanceof Array))throw Error("options.variants parameter is not an array");if(n.limit&&"number"!=typeof n.limit)throw Error("options.limit parameter is not a number");if(n.sort&&"string"!=typeof n.sort)throw Error("options.sort parameter is not a string");if(r&&"function"!=typeof r)throw Error("onChange is not a function")}},{key:"setDefaultOptions",value:function(e){var t=e;return e.name||(t.name=""),e.limit||(t.limit=100),e.variants||(t.variants=["regular"]),e.sort||(t.sort="alphabetical"),t}}]),c(e,[{key:"init",value:function(){var e,t=this;return(e=this.apiKey,new Promise(function(t,n){var r="https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key="+e,o=new XMLHttpRequest;o.overrideMimeType("application/json"),o.open("GET",r,!0),o.onreadystatechange=function(){if(4===o.readyState){if(200!==o.status)return n(new Error("Response has status code "+o.status));var e=JSON.parse(o.responseText);return t(e.items)}},o.send()})).then(function(e){t.fonts=function(e,t,n){var r=e;return n.families&&(r=r.filter(function(e){return n.families.includes(e.family)})),n.categories&&(r=r.filter(function(e){return n.categories.includes(e.category)})),n.variants&&(r=r.filter(function(e){for(var t=0;t<n.variants.length;t+=1)if(-1===e.variants.indexOf(n.variants[t]))return!1;return!0})),0===r.filter(function(e){return e.family===t.family}).length&&r.unshift(t),n.limit&&(r=r.slice(0,n.limit)),"alphabetical"===n.sort&&(r=r.sort(function(e,t){return e.family.localeCompare(t.family)})),r}(e,t.activeFont,t.options),t.downloadPreviews(10)})}},{key:"downloadPreviews",value:function(e){var t=void 0;t=e>this.fonts.length?this.fonts.length:e;for(var n=this.previewIndex;n<t;n+=1)this.styleManager.applyPreviewStyle(this.fonts[n]),a(this.fonts[n],this.options.variants);t>this.previewIndex&&(this.previewIndex=t)}},{key:"setActiveFont",value:function(e){var t=this.fonts.findIndex(function(t){return t.family===e});if(-1===t)return console.error('Cannot update activeFont: The font "'+e+'" is not in the font list'),-1;var n=this.activeFont.family;return this.activeFont=this.fonts[t],this.styleManager.changeActiveStyle(this.activeFont,n),i(this.activeFont,this.options.variants,this.onChange),t}}]),e}();!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===n&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}('@charset "UTF-8";\ndiv[id^="font-picker"] {\n  position: relative;\n  display: inline-block;\n  width: 200px;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2); }\n  div[id^="font-picker"] * {\n    box-sizing: border-box; }\n  div[id^="font-picker"] p {\n    margin: 0;\n    padding: 0; }\n  div[id^="font-picker"] button {\n    background: none;\n    border: 0;\n    color: inherit;\n    cursor: pointer;\n    font-size: inherit;\n    outline: none; }\n  div[id^="font-picker"] .dropdown-button {\n    height: 35px;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 10px;\n    background: #CBCBCB; }\n    div[id^="font-picker"] .dropdown-button:hover, div[id^="font-picker"] .dropdown-button.expanded, div[id^="font-picker"] .dropdown-button:focus {\n      background: #bebebe; }\n    div[id^="font-picker"] .dropdown-button .dropdown-font-name {\n      overflow: hidden;\n      white-space: nowrap; }\n  div[id^="font-picker"] .dropdown-icon {\n    margin-left: 10px; }\n\n@-webkit-keyframes spinner {\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n\n@keyframes spinner {\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n    div[id^="font-picker"] .dropdown-icon.loading:before {\n      content: \'\';\n      display: block;\n      height: 10px;\n      width: 10px;\n      border-radius: 50%;\n      border: 2px solid #b2b2b2;\n      border-top-color: black;\n      -webkit-animation: spinner 0.6s linear infinite;\n              animation: spinner 0.6s linear infinite; }\n    div[id^="font-picker"] .dropdown-icon.finished:before {\n      content: \'\';\n      display: block;\n      height: 0;\n      width: 0;\n      border-left: 5px solid transparent;\n      border-right: 5px solid transparent;\n      border-top: 6px solid black;\n      transition: -webkit-transform 0.3s;\n      transition: transform 0.3s;\n      transition: transform 0.3s, -webkit-transform 0.3s;\n      margin: 0 2px; }\n    div[id^="font-picker"] .dropdown-icon.error:before {\n      content: \'⚠\'; }\n  div[id^="font-picker"] .dropdown-button.expanded .dropdown-icon.finished:before {\n    -webkit-transform: rotate(-180deg);\n            transform: rotate(-180deg); }\n  div[id^="font-picker"] ul {\n    position: absolute;\n    z-index: 1;\n    max-height: 0;\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: auto;\n    -webkit-overflow-scrolling: touch;\n    margin: 0;\n    padding: 0;\n    background: #EAEAEA;\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n    transition: 0.3s; }\n    div[id^="font-picker"] ul.expanded {\n      max-height: 200px; }\n    div[id^="font-picker"] ul li {\n      height: 35px;\n      list-style: none; }\n      div[id^="font-picker"] ul li button {\n        height: 100%;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        padding: 0 10px;\n        white-space: nowrap; }\n        div[id^="font-picker"] ul li button:hover, div[id^="font-picker"] ul li button:focus {\n          background: #dddddd; }\n        div[id^="font-picker"] ul li button.active-font {\n          background: #d1d1d1; }\n');var p=function(){function e(t,n,r,o){u(this,e),this.closeEventListener=this.closeEventListener.bind(this),r.name?this.pickerSelector="font-picker-"+r.name:this.pickerSelector="font-picker",this.fontManager=new d(t,n,r,o),this.generateUI()}return c(e,[{key:"generateUI",value:function(){var e=this;this.expanded=!1;var t=document.getElementById(this.pickerSelector);if(!t)throw Error('Missing div with id="'+this.pickerSelector+'"');this.dropdownButton=document.createElement("button"),this.dropdownButton.classList.add("dropdown-button"),this.dropdownButton.onclick=function(){return e.toggleExpanded()},this.dropdownButton.onkeypress=function(){return e.toggleExpanded()},this.dropdownButton.type="button",t.appendChild(this.dropdownButton),this.dropdownFont=document.createElement("p"),this.dropdownFont.innerHTML=this.fontManager.activeFont.family,this.dropdownFont.classList.add("dropdown-font-name"),this.dropdownButton.append(this.dropdownFont);var n=document.createElement("p");n.classList.add("dropdown-icon","loading"),this.dropdownButton.append(n),this.ul=document.createElement("ul"),this.fontManager.init().then(function(){n.classList.remove("loading"),n.classList.add("finished"),e.ul.onscroll=function(){return e.onScroll()};for(var r=function(t){var n=e.fontManager.fonts[t].family,r=document.createElement("li"),o=document.createElement("button");o.type="button",o.innerHTML=n,o.classList.add("font-"+n.replace(/\s+/g,"-").toLowerCase()),o.onclick=function(){e.toggleExpanded(),e.setActiveFont(e.fontManager.fonts[t].family)},o.onkeypress=function(){e.toggleExpanded(),e.setActiveFont(e.fontManager.fonts[t].family)},r.appendChild(o),e.fontManager.fonts[t].family===e.fontManager.activeFont.family&&(o.classList.add("active-font"),e.activeFontA=o),e.ul.appendChild(r)},o=0;o<e.fontManager.fonts.length;o+=1)r(o);t.appendChild(e.ul)}).catch(function(e){n.classList.remove("loading"),n.classList.add("error");var r="Error trying to fetch the list of available fonts";console.error(r),console.error(e),t.title=r})}},{key:"closeEventListener",value:function(e){var t=e.target;do{if(t===document.getElementById(this.pickerSelector))return;t=t.parentNode}while(t);this.toggleExpanded()}},{key:"getActiveFont",value:function(){return this.fontManager.activeFont}},{key:"onScroll",value:function(){var e=this.ul.scrollHeight/this.fontManager.fonts.length,t=Math.ceil((this.ul.scrollTop+this.ul.clientHeight)/e);this.fontManager.downloadPreviews(t+5)}},{key:"setActiveFont",value:function(e){var t=this.fontManager.setActiveFont(e);t>=0&&(this.dropdownFont.innerHTML=e,this.activeFontA.classList.remove("active-font"),this.activeFontA=this.ul.getElementsByTagName("li")[t].firstChild,this.activeFontA.classList.add("active-font"))}},{key:"toggleExpanded",value:function(){this.expanded?(this.expanded=!1,this.dropdownButton.classList.remove("expanded"),this.ul.classList.remove("expanded"),document.removeEventListener("click",this.closeEventListener)):(this.expanded=!0,this.dropdownButton.classList.add("expanded"),this.ul.classList.add("expanded"),document.addEventListener("click",this.closeEventListener))}}]),e}();e.FontManager=d,e.FontPicker=p,Object.defineProperty(e,"__esModule",{value:!0})}(t)},function(e,t,n){"use strict";var r,o=n(0),i=(r=o)&&"object"==typeof r&&"default"in r?r.default:r,a=n(10),l=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},u=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),c=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},s=function(e){function t(e){l(this,t);var n=c(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={activeFont:n.props.activeFont,errorText:"",expanded:!1,loadingStatus:"loading"},n.fontManager=new a.FontManager(n.props.apiKey,n.props.activeFont,n.props.options),n.fontManager.init().then(function(){n.setState({errorText:"",loadingStatus:"finished"})}).catch(function(e){n.setState({errorText:"Error trying to fetch the list of available fonts",loadingStatus:"error"}),console.error(n.state.errorText),console.error(e)}),n.setActiveFont=n.setActiveFont.bind(n),n.onClose=n.onClose.bind(n),n.onScroll=n.onScroll.bind(n),n.toggleExpanded=n.toggleExpanded.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),u(t,[{key:"componentDidUpdate",value:function(){this.state.activeFont!==this.props.activeFont&&this.setActiveFont(this.props.activeFont)}},{key:"onClose",value:function(e){var t=e.target;do{if(t===document.getElementById("font-picker"))return;t=t.parentNode}while(t);this.toggleExpanded()}},{key:"onScroll",value:function(e){var t=e.target.scrollHeight/this.fontManager.fonts.length,n=Math.ceil((e.target.scrollTop+e.target.clientHeight)/t);this.fontManager.downloadPreviews(n+5)}},{key:"setActiveFont",value:function(e){-1===this.fontManager.setActiveFont(e)?(this.setState({activeFont:e,errorText:'Cannot update activeFont: The font "'+e+'" is not in the font list',loadingStatus:"error"}),console.error(this.state.errorText)):this.setState({activeFont:e,errorText:"",loadingStatus:"finished"})}},{key:"toggleExpanded",value:function(){this.state.expanded?(this.setState({expanded:!1}),document.removeEventListener("click",this.onClose)):(this.setState({expanded:!0}),document.addEventListener("click",this.onClose))}},{key:"render",value:function(){var e=this,t=void 0;return"finished"===this.state.loadingStatus&&(t=i.createElement("ul",{className:this.state.expanded?"expanded":"",onScroll:this.onScroll},this.fontManager.fonts.map(function(t){var n=t.family===e.state.activeFont,r=t.family.replace(/\s+/g,"-").toLowerCase();return i.createElement("li",{key:t.family},i.createElement("button",{type:"button",className:"font-"+r+" "+(n?"active-font":""),onClick:function(){e.toggleExpanded(),e.props.onChange(t)},onKeyPress:function(){e.toggleExpanded(),e.props.onChange(t)}},t.family))}))),i.createElement("div",{id:"font-picker"+this.fontManager.options.name,title:this.state.errorText},i.createElement("button",{type:"button",className:"dropdown-button "+(this.state.expanded?"expanded":""),onClick:this.toggleExpanded,onKeyPress:this.toggleExpanded},i.createElement("p",{className:"dropdown-font-name"},this.state.activeFont),i.createElement("div",{className:"dropdown-icon "+this.state.loadingStatus})),"finished"===this.state.loadingStatus&&t)}}]),t}();e.exports=s},function(e,t,n){e.exports=n.p+"e31dfada52ac3bc5e402ad6eb2857c3c.jpg"},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){var r,o=o||function(e){"use strict";if(!(void 0===e||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var t=function(){return e.URL||e.webkitURL||e},n=e.document.createElementNS("http://www.w3.org/1999/xhtml","a"),r="download"in n,o=/constructor/i.test(e.HTMLElement)||e.safari,i=/CriOS\/[\d]+/.test(navigator.userAgent),a=function(t){(e.setImmediate||e.setTimeout)(function(){throw t},0)},l=function(e){setTimeout(function(){"string"==typeof e?t().revokeObjectURL(e):e.remove()},4e4)},u=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob([String.fromCharCode(65279),e],{type:e.type}):e},c=function(c,s,f){f||(c=u(c));var d,p=this,h="application/octet-stream"===c.type,m=function(){!function(e,t,n){for(var r=(t=[].concat(t)).length;r--;){var o=e["on"+t[r]];if("function"==typeof o)try{o.call(e,n||e)}catch(e){a(e)}}}(p,"writestart progress write writeend".split(" "))};if(p.readyState=p.INIT,r)return d=t().createObjectURL(c),void setTimeout(function(){var e,t;n.href=d,n.download=s,e=n,t=new MouseEvent("click"),e.dispatchEvent(t),m(),l(d),p.readyState=p.DONE});!function(){if((i||h&&o)&&e.FileReader){var n=new FileReader;return n.onloadend=function(){var t=i?n.result:n.result.replace(/^data:[^;]*;/,"data:attachment/file;");e.open(t,"_blank")||(e.location.href=t),t=void 0,p.readyState=p.DONE,m()},n.readAsDataURL(c),void(p.readyState=p.INIT)}d||(d=t().createObjectURL(c)),h?e.location.href=d:e.open(d,"_blank")||(e.location.href=d);p.readyState=p.DONE,m(),l(d)}()},s=c.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,n){return t=t||e.name||"download",n||(e=u(e)),navigator.msSaveOrOpenBlob(e,t)}:(s.abort=function(){},s.readyState=s.INIT=0,s.WRITING=1,s.DONE=2,s.error=s.onwritestart=s.onprogress=s.onwrite=s.onabort=s.onerror=s.onwriteend=null,function(e,t,n){return new c(e,t||e.name||"download",n)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);
/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */void 0!==e&&e.exports?e.exports.saveAs=o:null!==n(14)&&null!==n(13)&&(void 0===(r=function(){return o}.call(t,n,t,e))||(e.exports=r))},function(e,t,n){!function(t){"use strict";var n=function(){return{escape:function(e){return e.replace(/([.*+?^${}()|\[\]\/\\])/g,"\\$1")},parseExtension:t,mimeType:function(e){var n=t(e).toLowerCase();return(r="application/font-woff",{woff:r,woff2:r,ttf:"application/font-truetype",eot:"application/vnd.ms-fontobject",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif",tiff:"image/tiff",svg:"image/svg+xml"})[n]||"";var r},dataAsUrl:function(e,t){return"data:"+t+";base64,"+e},isDataUrl:function(e){return-1!==e.search(/^(data:)/)},canvasToBlob:function(e){return e.toBlob?new Promise(function(t){e.toBlob(t)}):function(e){return new Promise(function(t){for(var n=window.atob(e.toDataURL().split(",")[1]),r=n.length,o=new Uint8Array(r),i=0;i<r;i++)o[i]=n.charCodeAt(i);t(new Blob([o],{type:"image/png"}))})}(e)},resolveUrl:function(e,t){var n=document.implementation.createHTMLDocument(),r=n.createElement("base");n.head.appendChild(r);var o=n.createElement("a");return n.body.appendChild(o),r.href=t,o.href=e,o.href},getAndEncode:function(e){var t=3e4;l.impl.options.cacheBust&&(e+=(/\?/.test(e)?"&":"?")+(new Date).getTime());return new Promise(function(n){var r,o=new XMLHttpRequest;if(o.onreadystatechange=function(){if(4!==o.readyState)return;if(200!==o.status)return void(r?n(r):a("cannot fetch resource: "+e+", status: "+o.status));var t=new FileReader;t.onloadend=function(){var e=t.result.split(/,/)[1];n(e)},t.readAsDataURL(o.response)},o.ontimeout=function(){r?n(r):a("timeout of "+t+"ms occured while fetching resource: "+e)},o.responseType="blob",o.timeout=t,o.open("GET",e,!0),o.send(),l.impl.options.imagePlaceholder){var i=l.impl.options.imagePlaceholder.split(/,/);i&&i[1]&&(r=i[1])}function a(e){console.error(e),n("")}})},uid:(e=0,function(){return"u"+("0000"+(Math.random()*Math.pow(36,4)<<0).toString(36)).slice(-4)+e++}),delay:function(e){return function(t){return new Promise(function(n){setTimeout(function(){n(t)},e)})}},asArray:function(e){for(var t=[],n=e.length,r=0;r<n;r++)t.push(e[r]);return t},escapeXhtml:function(e){return e.replace(/#/g,"%23").replace(/\n/g,"%0A")},makeImage:function(e){return new Promise(function(t,n){var r=new Image;r.onload=function(){t(r)},r.onerror=n,r.src=e})},width:function(e){var t=n(e,"border-left-width"),r=n(e,"border-right-width");return e.scrollWidth+t+r},height:function(e){var t=n(e,"border-top-width"),r=n(e,"border-bottom-width");return e.scrollHeight+t+r}};var e;function t(e){var t=/\.([^\.\/]*?)$/g.exec(e);return t?t[1]:""}function n(e,t){var n=window.getComputedStyle(e).getPropertyValue(t);return parseFloat(n.replace("px",""))}}(),r=function(){var e=/url\(['"]?([^'"]+?)['"]?\)/g;return{inlineAll:function(e,n,i){return t(e)?Promise.resolve(e).then(r).then(function(t){var r=Promise.resolve(e);return t.forEach(function(e){r=r.then(function(t){return o(t,e,n,i)})}),r}):Promise.resolve(e)},shouldProcess:t,impl:{readUrls:r,inline:o}};function t(t){return-1!==t.search(e)}function r(t){for(var r,o=[];null!==(r=e.exec(t));)o.push(r[1]);return o.filter(function(e){return!n.isDataUrl(e)})}function o(e,t,r,o){return Promise.resolve(t).then(function(e){return r?n.resolveUrl(e,r):e}).then(o||n.getAndEncode).then(function(e){return n.dataAsUrl(e,n.mimeType(t))}).then(function(r){return e.replace(function(e){return new RegExp("(url\\(['\"]?)("+n.escape(e)+")(['\"]?\\))","g")}(t),"$1"+r+"$3")})}}(),o=function(){return{resolveAll:function(){return e(document).then(function(e){return Promise.all(e.map(function(e){return e.resolve()}))}).then(function(e){return e.join("\n")})},impl:{readAll:e}};function e(){return Promise.resolve(n.asArray(document.styleSheets)).then(function(e){var t=[];return e.forEach(function(e){try{n.asArray(e.cssRules||[]).forEach(t.push.bind(t))}catch(t){console.log("Error while reading CSS rules from "+e.href,t.toString())}}),t}).then(function(e){return e.filter(function(e){return e.type===CSSRule.FONT_FACE_RULE}).filter(function(e){return r.shouldProcess(e.style.getPropertyValue("src"))})}).then(function(t){return t.map(e)});function e(e){return{resolve:function(){var t=(e.parentStyleSheet||{}).href;return r.inlineAll(e.cssText,t)},src:function(){return e.style.getPropertyValue("src")}}}}}(),i=function(){return{inlineAll:function t(o){if(!(o instanceof Element))return Promise.resolve(o);return function(e){var t=e.style.getPropertyValue("background");return t?r.inlineAll(t).then(function(t){e.style.setProperty("background",t,e.style.getPropertyPriority("background"))}).then(function(){return e}):Promise.resolve(e)}(o).then(function(){return o instanceof HTMLImageElement?e(o).inline():Promise.all(n.asArray(o.childNodes).map(function(e){return t(e)}))})},impl:{newImage:e}};function e(e){return{inline:function(t){return n.isDataUrl(e.src)?Promise.resolve():Promise.resolve(e.src).then(t||n.getAndEncode).then(function(t){return n.dataAsUrl(t,n.mimeType(e.src))}).then(function(t){return new Promise(function(n,r){e.onload=n,e.onerror=r,e.src=t})})}}}}(),a={imagePlaceholder:void 0,cacheBust:!1},l={toSvg:u,toPng:function(e,t){return c(e,t||{}).then(function(e){return e.toDataURL()})},toJpeg:function(e,t){return c(e,t=t||{}).then(function(e){return e.toDataURL("image/jpeg",t.quality||1)})},toBlob:function(e,t){return c(e,t||{}).then(n.canvasToBlob)},toPixelData:function(e,t){return c(e,t||{}).then(function(t){return t.getContext("2d").getImageData(0,0,n.width(e),n.height(e)).data})},impl:{fontFaces:o,images:i,util:n,inliner:r,options:{}}};function u(e,t){return function(e){void 0===e.imagePlaceholder?l.impl.options.imagePlaceholder=a.imagePlaceholder:l.impl.options.imagePlaceholder=e.imagePlaceholder;void 0===e.cacheBust?l.impl.options.cacheBust=a.cacheBust:l.impl.options.cacheBust=e.cacheBust}(t=t||{}),Promise.resolve(e).then(function(e){return function(e,t,r){if(!r&&t&&!t(e))return Promise.resolve();return Promise.resolve(e).then(function(e){return e instanceof HTMLCanvasElement?n.makeImage(e.toDataURL()):e.cloneNode(!1)}).then(function(r){return function(e,t,r){var o=e.childNodes;return 0===o.length?Promise.resolve(t):function(e,t,n){var r=Promise.resolve();return t.forEach(function(t){r=r.then(function(){return s(t,n)}).then(function(t){t&&e.appendChild(t)})}),r}(t,n.asArray(o),r).then(function(){return t})}(e,r,t)}).then(function(t){return function(e,t){return t instanceof Element?Promise.resolve().then(function(){var r,o;r=window.getComputedStyle(e),o=t.style,r.cssText?o.cssText=r.cssText:function(e,t){n.asArray(e).forEach(function(n){t.setProperty(n,e.getPropertyValue(n),e.getPropertyPriority(n))})}(r,o)}).then(function(){[":before",":after"].forEach(function(r){!function(r){var o=window.getComputedStyle(e,r),i=o.getPropertyValue("content");if(""!==i&&"none"!==i){var a=n.uid();t.className=t.className+" "+a;var l=document.createElement("style");l.appendChild(function(e,t,r){var o="."+e+":"+t,i=r.cssText?function(e){var t=e.getPropertyValue("content");return e.cssText+" content: "+t+";"}(r):function(e){return n.asArray(e).map(function(t){return t+": "+e.getPropertyValue(t)+(e.getPropertyPriority(t)?" !important":"")}).join("; ")+";"}(r);return document.createTextNode(o+"{"+i+"}")}(a,r,o)),t.appendChild(l)}}(r)})}).then(function(){e instanceof HTMLTextAreaElement&&(t.innerHTML=e.value),e instanceof HTMLInputElement&&t.setAttribute("value",e.value)}).then(function(){t instanceof SVGElement&&(t.setAttribute("xmlns","http://www.w3.org/2000/svg"),t instanceof SVGRectElement&&["width","height"].forEach(function(e){var n=t.getAttribute(e);n&&t.style.setProperty(e,n)}))}).then(function(){return t}):t}(e,t)})}(e,t.filter,!0)}).then(f).then(d).then(function(e){t.bgcolor&&(e.style.backgroundColor=t.bgcolor);t.width&&(e.style.width=t.width+"px");t.height&&(e.style.height=t.height+"px");t.style&&Object.keys(t.style).forEach(function(n){e.style[n]=t.style[n]});return e}).then(function(r){return function(e,t,r){return Promise.resolve(e).then(function(e){return e.setAttribute("xmlns","http://www.w3.org/1999/xhtml"),(new XMLSerializer).serializeToString(e)}).then(n.escapeXhtml).then(function(e){return'<foreignObject x="0" y="0" width="100%" height="100%">'+e+"</foreignObject>"}).then(function(e){return'<svg xmlns="http://www.w3.org/2000/svg" width="'+t+'" height="'+r+'">'+e+"</svg>"}).then(function(e){return"data:image/svg+xml;charset=utf-8,"+e})}(r,t.width||n.width(e),t.height||n.height(e))})}function c(e,t){return u(e,t).then(n.makeImage).then(n.delay(100)).then(function(r){var o=function(e){var r=document.createElement("canvas");if(r.width=t.width||n.width(e),r.height=t.height||n.height(e),t.bgcolor){var o=r.getContext("2d");o.fillStyle=t.bgcolor,o.fillRect(0,0,r.width,r.height)}return r}(e);return o.getContext("2d").drawImage(r,0,0),o})}function s(e,t,r){if(!r&&t&&!t(e))return Promise.resolve();return Promise.resolve(e).then(o).then(function(n){return i(e,n,t)}).then(function(t){return a(e,t)});function o(e){return e instanceof HTMLCanvasElement?n.makeImage(e.toDataURL()):e.cloneNode(!1)}function i(e,t,r){var o=e.childNodes;return 0===o.length?Promise.resolve(t):function(e,t,n){var r=Promise.resolve();return t.forEach(function(t){r=r.then(function(){return s(t,n)}).then(function(t){t&&e.appendChild(t)})}),r}(t,n.asArray(o),r).then(function(){return t});function i(e,t,n){var r=Promise.resolve();return t.forEach(function(t){r=r.then(function(){return s(t,n)}).then(function(t){t&&e.appendChild(t)})}),r}}function a(e,t){return t instanceof Element?Promise.resolve().then(function(){!function(e,t){e.cssText?t.cssText=e.cssText:function(e,t){n.asArray(e).forEach(function(n){t.setProperty(n,e.getPropertyValue(n),e.getPropertyPriority(n))})}(e,t)}(window.getComputedStyle(e),t.style)}).then(function(){[":before",":after"].forEach(function(r){!function(r){var o=window.getComputedStyle(e,r),i=o.getPropertyValue("content");if(""===i||"none"===i)return;var a=n.uid();t.className=t.className+" "+a;var l=document.createElement("style");l.appendChild(function(e,t,r){var o="."+e+":"+t,i=r.cssText?function(e){var t=e.getPropertyValue("content");return e.cssText+" content: "+t+";"}(r):function(e){return n.asArray(e).map(function(t){return t+": "+e.getPropertyValue(t)+(e.getPropertyPriority(t)?" !important":"")}).join("; ")+";"}(r);return document.createTextNode(o+"{"+i+"}")}(a,r,o)),t.appendChild(l)}(r)})}).then(function(){e instanceof HTMLTextAreaElement&&(t.innerHTML=e.value);e instanceof HTMLInputElement&&t.setAttribute("value",e.value)}).then(function(){if(!(t instanceof SVGElement))return;if(t.setAttribute("xmlns","http://www.w3.org/2000/svg"),!(t instanceof SVGRectElement))return;["width","height"].forEach(function(e){var n=t.getAttribute(e);n&&t.style.setProperty(e,n)})}).then(function(){return t}):t;function r(){function r(e,t){if(e.cssText)t.cssText=e.cssText;else r(e,t);function r(e,t){n.asArray(e).forEach(function(n){t.setProperty(n,e.getPropertyValue(n),e.getPropertyPriority(n))})}}r(window.getComputedStyle(e),t.style)}function o(){function r(r){var o=window.getComputedStyle(e,r),i=o.getPropertyValue("content");if(i===""||i==="none")return;var a=n.uid();t.className=t.className+" "+a;var l=document.createElement("style");function u(e,t,r){var o="."+e+":"+t,i=r.cssText?a(r):l(r);return document.createTextNode(o+"{"+i+"}");function a(e){var t=e.getPropertyValue("content");return e.cssText+" content: "+t+";"}function l(e){return n.asArray(e).map(t).join("; ")+";";function t(t){return t+": "+e.getPropertyValue(t)+(e.getPropertyPriority(t)?" !important":"")}}}l.appendChild(u(a,r,o)),t.appendChild(l)}[":before",":after"].forEach(function(e){r(e)})}function i(){if(e instanceof HTMLTextAreaElement)t.innerHTML=e.value;if(e instanceof HTMLInputElement)t.setAttribute("value",e.value)}function a(){if(!(t instanceof SVGElement))return;if(t.setAttribute("xmlns","http://www.w3.org/2000/svg"),!(t instanceof SVGRectElement))return;["width","height"].forEach(function(e){var n=t.getAttribute(e);if(!n)return;t.style.setProperty(e,n)})}}}function f(e){return o.resolveAll().then(function(t){var n=document.createElement("style");return e.appendChild(n),n.appendChild(document.createTextNode(t)),e})}function d(e){return i.inlineAll(e).then(function(){return e})}e.exports=l}()},function(e,t){var n,r,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(e){r=a}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||l(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),i=s(o),a=s(n(16)),l=s(n(15)),u=s(n(12)),c=s(n(11));function s(e){return e&&e.__esModule?e:{default:e}}console.log(e.env);var f=function(e){function t(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var e=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.state={header:"Noun Here",footer:"Is this a Meme?",color:"#000000",activeFont:"Open Sans",image:null},e.headerChange=e.headerChange.bind(e),e.footerChange=e.footerChange.bind(e),e.handleImageSrc=e.handleImageSrc.bind(e),e.handleExport=e.handleExport.bind(e),e.handleUpload=e.handleUpload.bind(e),e.colorChange=e.colorChange.bind(e),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"headerChange",value:function(e){var t=e.target;this.setState({header:t.value})}},{key:"footerChange",value:function(e){var t=e.target;this.setState({footer:t.value})}},{key:"colorChange",value:function(e){var t=e.target;this.setState({color:t.value})}},{key:"handleImageSrc",value:function(e){var t=e.target;this.setState({image:t.value})}},{key:"handleUpload",value:function(e){var t=this,n=e.target,r=new FileReader;r.readAsDataURL(n.files[0]),r.onload=function(){t.setState({image:r.result})}}},{key:"handleExport",value:function(){a.default.toBlob(this.imageExport).then(function(e){l.default.saveAs(e,"cute-image.png")})}},{key:"render",value:function(){var e=this,t=this.state,n=t.header,r=t.footer,o=t.color,a=t.image;return i.default.createElement("main",null,i.default.createElement("h1",null,"Is it A Pigeon?"),i.default.createElement("fieldset",null,i.default.createElement("div",{id:"form"},i.default.createElement("label",null,"Header:"),i.default.createElement("input",{value:n,onChange:function(t){return e.headerChange(t)}}),i.default.createElement("br",null),i.default.createElement("label",null,"Footer:"),i.default.createElement("input",{value:r,onChange:function(t){return e.footerChange(t)}}),i.default.createElement("label",null,"Font Color:"),i.default.createElement("input",{type:"color",value:o,onChange:function(t){return e.colorChange(t)}}),i.default.createElement("div",null,i.default.createElement(c.default,{apiKey:"AIzaSyAB69_nOVWe6KjrdCROZE0JvdjD1Iy3j1I",activeFont:this.state.activeFont,onChange:function(t){return e.setState({activeFont:t.family})}})))),i.default.createElement("div",{className:"image-container",ref:function(t){return e.imageExport=t}},i.default.createElement("div",{id:"memeHeader",style:{color:o},className:"apply-font"},n),i.default.createElement("div",{id:"memeFooter",style:{color:o},className:"apply-font"},r),i.default.createElement("img",{id:"topImage",src:a}),i.default.createElement("img",{id:"baseImage",src:u.default})),i.default.createElement("section",{id:"section"},i.default.createElement("div",null,i.default.createElement("label",null,"Image Src:"),i.default.createElement("input",{onChange:function(t){return e.handleImageSrc(t)}})),i.default.createElement("div",null,i.default.createElement("label",null,"Image:"),i.default.createElement("input",{type:"file",onChange:function(t){return e.handleUpload(t)}})),i.default.createElement("div",null,i.default.createElement("button",{onClick:function(){return e.handleExport()}},"Export dis meme"))))}}]),t}();t.default=f}).call(this,n(17))},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(19);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(20);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!r.call(t,n[a])||!o(e[n[a]],t[n[a]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(3),o=n(0),i=n(24),a=n(4),l=n(1),u=n(23),c=n(22),s=n(21),f=n(2);function d(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||d("227");var p={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,i,a,l,u){(function(e,t,n,r,o,i,a,l,u){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(p,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,l,u){if(p.invokeGuardedCallback.apply(this,arguments),p.hasCaughtError()){var c=p.clearCaughtError();p._hasRethrowError||(p._hasRethrowError=!0,p._rethrowError=c)}},rethrowCaughtError:function(){return function(){if(p._hasRethrowError){var e=p._rethrowError;throw p._rethrowError=null,p._hasRethrowError=!1,e}}.apply(p,arguments)},hasCaughtError:function(){return p._hasCaughtError},clearCaughtError:function(){if(p._hasCaughtError){var e=p._caughtError;return p._caughtError=null,p._hasCaughtError=!1,e}d("198")}};var h=null,m={};function v(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||d("96",e),!y[n])for(var r in t.extractEvents||d("97",e),y[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,l=r;b.hasOwnProperty(l)&&d("99",l),b[l]=i;var u=i.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&g(u[o],a,l);o=!0}else i.registrationName?(g(i.registrationName,a,l),o=!0):o=!1;o||d("98",r,e)}}}function g(e,t,n){w[e]&&d("100",e),w[e]=t,k[e]=t.eventTypes[n].dependencies}var y=[],b={},w={},k={};function x(e){h&&d("101"),h=Array.prototype.slice.call(e),v()}function E(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&d("102",t),m[t]=r,n=!0)}n&&v()}var C={plugins:y,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:k,possibleRegistrationNames:null,injectEventPluginOrder:x,injectEventPluginsByName:E},T=null,S=null,_=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=_(r),p.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function N(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function O(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var M=null;function F(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function I(e){return F(e,!0)}function R(e){return F(e,!1)}var L={injectEventPluginOrder:x,injectEventPluginsByName:E};function U(e,t){var n=e.stateNode;if(!n)return null;var r=T(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function A(e,t){null!==e&&(M=N(M,e)),e=M,M=null,e&&(O(e,t?I:R),M&&d("95"),p.rethrowCaughtError())}function D(e,t,n,r){for(var o=null,i=0;i<y.length;i++){var a=y[i];a&&(a=a.extractEvents(e,t,n,r))&&(o=N(o,a))}A(o,!1)}var j={injection:L,getListener:U,runEventsInBatch:A,runExtractedEventsInBatch:D},z=Math.random().toString(36).slice(2),B="__reactInternalInstance$"+z,V="__reactEventHandlers$"+z;function H(e){if(e[B])return e[B];for(;!e[B];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[B]).tag||6===e.tag?e:null}function W(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function $(e){return e[V]||null}var K={precacheFiberNode:function(e,t){t[B]=e},getClosestInstanceFromNode:H,getInstanceFromNode:function(e){return!(e=e[B])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:W,getFiberCurrentPropsFromNode:$,updateFiberProps:function(e,t){e[V]=t}};function Q(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function q(e,t,n){for(var r=[];e;)r.push(e),e=Q(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function G(e,t,n){(t=U(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=N(n._dispatchListeners,t),n._dispatchInstances=N(n._dispatchInstances,e))}function X(e){e&&e.dispatchConfig.phasedRegistrationNames&&q(e._targetInst,G,e)}function Y(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;q(t=t?Q(t):null,G,e)}}function J(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=U(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=N(n._dispatchListeners,t),n._dispatchInstances=N(n._dispatchInstances,e))}function Z(e){e&&e.dispatchConfig.registrationName&&J(e._targetInst,null,e)}function ee(e){O(e,X)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,i=r,a=0,l=o;l;l=Q(l))a++;l=0;for(var u=i;u;u=Q(u))l++;for(;0<a-l;)o=Q(o),a--;for(;0<l-a;)i=Q(i),l--;for(;a--;){if(o===i||o===i.alternate)break e;o=Q(o),i=Q(i)}o=null}else o=null;for(i=o,o=[];n&&n!==i&&(null===(a=n.alternate)||a!==i);)o.push(n),n=Q(n);for(n=[];r&&r!==i&&(null===(a=r.alternate)||a!==i);)n.push(r),r=Q(r);for(r=0;r<o.length;r++)J(o[r],"bubbled",e);for(e=n.length;0<e--;)J(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){O(e,Y)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){O(e,Z)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ie={},ae={};function le(e){if(ie[e])return ie[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ae)return ie[e]=n[t];return e}i.canUseDOM&&(ae=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var ue=le("animationend"),ce=le("animationiteration"),se=le("animationstart"),fe=le("transitionend"),de="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pe=null;function he(){return!pe&&i.canUseDOM&&(pe="textContent"in document.documentElement?"textContent":"innerText"),pe}var me={_root:null,_startText:null,_fallbackText:null};function ve(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ge(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ge(){return"value"in me._root?me._root.value:me._root[he()]}var ye="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:l.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?l.thatReturnsTrue:l.thatReturnsFalse,this.isPropagationStopped=l.thatReturnsFalse,this}function ke(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function xe(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Ee(e){e.eventPool=[],e.getPooled=ke,e.release=xe}a(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=l.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=l.thatReturnsTrue)},persist:function(){this.isPersistent=l.thatReturnsTrue},isPersistent:l.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ye.length;t++)this[ye[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,Ee(n),n},Ee(we);var Ce=we.extend({data:null}),Te=we.extend({data:null}),Se=[9,13,27,32],_e=i.canUseDOM&&"CompositionEvent"in window,Pe=null;i.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Ne=i.canUseDOM&&"TextEvent"in window&&!Pe,Oe=i.canUseDOM&&(!_e||Pe&&8<Pe&&11>=Pe),Me=String.fromCharCode(32),Fe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ie=!1;function Re(e,t){switch(e){case"keyup":return-1!==Se.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Le(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ue=!1;var Ae={eventTypes:Fe,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(_e)e:{switch(e){case"compositionstart":o=Fe.compositionStart;break e;case"compositionend":o=Fe.compositionEnd;break e;case"compositionupdate":o=Fe.compositionUpdate;break e}o=void 0}else Ue?Re(e,n)&&(o=Fe.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Fe.compositionStart);return o?(Oe&&(Ue||o!==Fe.compositionStart?o===Fe.compositionEnd&&Ue&&(i=ve()):(me._root=r,me._startText=ge(),Ue=!0)),o=Ce.getPooled(o,t,n,r),i?o.data=i:null!==(i=Le(n))&&(o.data=i),ee(o),i=o):i=null,(e=Ne?function(e,t){switch(e){case"compositionend":return Le(t);case"keypress":return 32!==t.which?null:(Ie=!0,Me);case"textInput":return(e=t.data)===Me&&Ie?null:e;default:return null}}(e,n):function(e,t){if(Ue)return"compositionend"===e||!_e&&Re(e,t)?(e=ve(),me._root=null,me._startText=null,me._fallbackText=null,Ue=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Oe?null:t.data;default:return null}}(e,n))?((t=Te.getPooled(Fe.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===i?t:null===t?i:[i,t]}},De=null,je={injectFiberControlledHostComponent:function(e){De=e}},ze=null,Be=null;function Ve(e){if(e=S(e)){De&&"function"==typeof De.restoreControlledState||d("194");var t=T(e.stateNode);De.restoreControlledState(e.stateNode,e.type,t)}}function He(e){ze?Be?Be.push(e):Be=[e]:ze=e}function We(){return null!==ze||null!==Be}function $e(){if(ze){var e=ze,t=Be;if(Be=ze=null,Ve(e),t)for(e=0;e<t.length;e++)Ve(t[e])}}var Ke={injection:je,enqueueStateRestore:He,needsStateRestore:We,restoreStateIfNeeded:$e};function Qe(e,t){return e(t)}function qe(e,t,n){return e(t,n)}function Ge(){}var Xe=!1;function Ye(e,t){if(Xe)return e(t);Xe=!0;try{return Qe(e,t)}finally{Xe=!1,We()&&(Ge(),$e())}}var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Je[e.type]:"textarea"===t}function et(e){return(e=e.target||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!i.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var it=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,at="function"==typeof Symbol&&Symbol.for,lt=at?Symbol.for("react.element"):60103,ut=at?Symbol.for("react.portal"):60106,ct=at?Symbol.for("react.fragment"):60107,st=at?Symbol.for("react.strict_mode"):60108,ft=at?Symbol.for("react.profiler"):60114,dt=at?Symbol.for("react.provider"):60109,pt=at?Symbol.for("react.context"):60110,ht=at?Symbol.for("react.async_mode"):60111,mt=at?Symbol.for("react.forward_ref"):60112,vt=at?Symbol.for("react.timeout"):60113,gt="function"==typeof Symbol&&Symbol.iterator;function yt(e){return null===e||void 0===e?null:"function"==typeof(e=gt&&e[gt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case pt:return"Context.Consumer";case ct:return"ReactFragment";case ut:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case dt:return"Context.Provider";case st:return"StrictMode";case vt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),i=null;n&&(i=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":i?" (created by "+i+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var kt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xt={},Et={};function Ct(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var Tt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Tt[e]=new Ct(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Tt[t]=new Ct(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){Tt[e]=new Ct(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){Tt[e]=new Ct(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Tt[e]=new Ct(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){Tt[e]=new Ct(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){Tt[e]=new Ct(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){Tt[e]=new Ct(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){Tt[e]=new Ct(e,5,!1,e.toLowerCase(),null)});var St=/[\-:]([a-z])/g;function _t(e){return e[1].toUpperCase()}function Pt(e,t,n,r){var o=Tt.hasOwnProperty(t)?Tt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!Et.hasOwnProperty(e)||!xt.hasOwnProperty(e)&&(kt.test(e)?Et[e]=!0:(xt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Nt(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ot(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Lt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Mt(e,t){null!=(t=t.checked)&&Pt(e,"checked",t,!1)}function Ft(e,t){Mt(e,t);var n=Lt(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?Rt(e,t.type,n):t.hasOwnProperty("defaultValue")&&Rt(e,t.type,Lt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function It(e,t){(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue"))&&(""===e.value&&(e.value=""+e._wrapperState.initialValue),e.defaultValue=""+e._wrapperState.initialValue),""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function Rt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Lt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(St,_t);Tt[t]=new Ct(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(St,_t);Tt[t]=new Ct(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(St,_t);Tt[t]=new Ct(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),Tt.tabIndex=new Ct("tabIndex",1,!1,"tabindex",null);var Ut={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function At(e,t,n){return(e=we.getPooled(Ut.change,e,t,n)).type="change",He(n),ee(e),e}var Dt=null,jt=null;function zt(e){A(e,!1)}function Bt(e){if(ot(W(e)))return e}function Vt(e,t){if("change"===e)return t}var Ht=!1;function Wt(){Dt&&(Dt.detachEvent("onpropertychange",$t),jt=Dt=null)}function $t(e){"value"===e.propertyName&&Bt(jt)&&Ye(zt,e=At(jt,e,et(e)))}function Kt(e,t,n){"focus"===e?(Wt(),jt=n,(Dt=t).attachEvent("onpropertychange",$t)):"blur"===e&&Wt()}function Qt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Bt(jt)}function qt(e,t){if("click"===e)return Bt(t)}function Gt(e,t){if("input"===e||"change"===e)return Bt(t)}i.canUseDOM&&(Ht=tt("input")&&(!document.documentMode||9<document.documentMode));var Xt={eventTypes:Ut,_isInputEventSupported:Ht,extractEvents:function(e,t,n,r){var o=t?W(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Vt:Ze(o)?Ht?i=Gt:(i=Qt,a=Kt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=qt),i&&(i=i(e,t)))return At(i,n,r);a&&a(e,o,t),"blur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&Rt(o,"number",o.value)}},Yt=we.extend({view:null,detail:null}),Jt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Zt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Jt[e])&&!!t[e]}function en(){return Zt}var tn=Yt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:en,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),rn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},on={eventTypes:rn,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?H(t):null):i=null,i===t)return null;var a=void 0,l=void 0,u=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(a=tn,l=rn.mouseLeave,u=rn.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=nn,l=rn.pointerLeave,u=rn.pointerEnter,c="pointer"),e=null==i?o:W(i),o=null==t?o:W(t),(l=a.getPooled(l,i,n,r)).type=c+"leave",l.target=e,l.relatedTarget=o,(n=a.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,te(l,n,i,t),[l,n]}};function an(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function ln(e){2!==an(e)&&d("188")}function un(e){var t=e.alternate;if(!t)return 3===(t=an(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return ln(o),e;if(a===r)return ln(o),t;a=a.sibling}d("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var l=o.child;l;){if(l===n){a=!0,n=o,r=i;break}if(l===r){a=!0,r=o,n=i;break}l=l.sibling}if(!a){for(l=i.child;l;){if(l===n){a=!0,n=i,r=o;break}if(l===r){a=!0,r=i,n=o;break}l=l.sibling}a||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}function cn(e){if(!(e=un(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var sn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),fn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),dn=Yt.extend({relatedTarget:null});function pn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var hn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vn=Yt.extend({key:function(e){if(e.key){var t=hn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=pn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?mn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:en,charCode:function(e){return"keypress"===e.type?pn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?pn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),gn=tn.extend({dataTransfer:null}),yn=Yt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:en}),bn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),wn=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),kn=[["abort","abort"],[ue,"animationEnd"],[ce,"animationIteration"],[se,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],xn={},En={};function Cn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},xn[e]=t,En[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Cn(e,!0)}),kn.forEach(function(e){Cn(e,!1)});var Tn={eventTypes:xn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=En[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=En[e];if(!o)return null;switch(e){case"keypress":if(0===pn(n))return null;case"keydown":case"keyup":e=vn;break;case"blur":case"focus":e=dn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=yn;break;case ue:case ce:case se:e=sn;break;case fe:e=bn;break;case"scroll":e=Yt;break;case"wheel":e=wn;break;case"copy":case"cut":case"paste":e=fn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},Sn=Tn.isInteractiveTopLevelEventType,_n=[];function Pn(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=H(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],D(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var Nn=!0;function On(e){Nn=!!e}function Mn(e,t){if(!t)return null;var n=(Sn(e)?In:Rn).bind(null,e);t.addEventListener(e,n,!1)}function Fn(e,t){if(!t)return null;var n=(Sn(e)?In:Rn).bind(null,e);t.addEventListener(e,n,!0)}function In(e,t){qe(Rn,e,t)}function Rn(e,t){if(Nn){var n=et(t);if(null===(n=H(n))||"number"!=typeof n.tag||2===an(n)||(n=null),_n.length){var r=_n.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ye(Pn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>_n.length&&_n.push(e)}}}var Ln={get _enabled(){return Nn},setEnabled:On,isEnabled:function(){return Nn},trapBubbledEvent:Mn,trapCapturedEvent:Fn,dispatchEvent:Rn},Un={},An=0,Dn="_reactListenersID"+(""+Math.random()).slice(2);function jn(e){return Object.prototype.hasOwnProperty.call(e,Dn)||(e[Dn]=An++,Un[e[Dn]]={}),Un[e[Dn]]}function zn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Bn(e,t){var n,r=zn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=zn(r)}}function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var Hn=i.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Wn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$n=null,Kn=null,Qn=null,qn=!1;function Gn(e,t){if(qn||null==$n||$n!==u())return null;var n=$n;return"selectionStart"in n&&Vn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Qn&&c(Qn,n)?null:(Qn=n,(e=we.getPooled(Wn.select,Kn,e,t)).type="select",e.target=$n,ee(e),e)}var Xn={eventTypes:Wn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=jn(i),o=k.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?W(t):window,e){case"focus":(Ze(i)||"true"===i.contentEditable)&&($n=i,Kn=t,Qn=null);break;case"blur":Qn=Kn=$n=null;break;case"mousedown":qn=!0;break;case"contextmenu":case"mouseup":return qn=!1,Gn(n,r);case"selectionchange":if(Hn)break;case"keydown":case"keyup":return Gn(n,r)}return null}};L.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),T=K.getFiberCurrentPropsFromNode,S=K.getInstanceFromNode,_=K.getNodeFromInstance,L.injectEventPluginsByName({SimpleEventPlugin:Tn,EnterLeaveEventPlugin:on,ChangeEventPlugin:Xt,SelectEventPlugin:Xn,BeforeInputEventPlugin:Ae});var Yn=void 0;Yn="object"==typeof performance&&"function"==typeof performance.now?function(){return performance.now()}:function(){return Date.now()};var Jn=void 0,Zn=void 0;if(i.canUseDOM){var er=[],tr=0,nr={},rr=-1,or=!1,ir=!1,ar=0,lr=33,ur=33,cr={didTimeout:!1,timeRemaining:function(){var e=ar-Yn();return 0<e?e:0}},sr=function(e,t){if(nr[t])try{e(cr)}finally{delete nr[t]}},fr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===fr&&(or=!1,0!==er.length)){if(0!==er.length&&(e=Yn(),!(-1===rr||rr>e))){rr=-1,cr.didTimeout=!0;for(var t=0,n=er.length;t<n;t++){var r=er[t],o=r.timeoutTime;-1!==o&&o<=e?sr(r.scheduledCallback,r.callbackId):-1!==o&&(-1===rr||o<rr)&&(rr=o)}}for(e=Yn();0<ar-e&&0<er.length;)e=er.shift(),cr.didTimeout=!1,sr(e.scheduledCallback,e.callbackId),e=Yn();0<er.length&&!ir&&(ir=!0,requestAnimationFrame(dr))}},!1);var dr=function(e){ir=!1;var t=e-ar+ur;t<ur&&lr<ur?(8>t&&(t=8),ur=t<lr?lr:t):lr=t,ar=e+ur,or||(or=!0,window.postMessage(fr,"*"))};Jn=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=Yn()+t.timeout),(-1===rr||-1!==n&&n<rr)&&(rr=n),t=++tr,er.push({scheduledCallback:e,callbackId:t,timeoutTime:n}),nr[t]=!0,ir||(ir=!0,requestAnimationFrame(dr)),t},Zn=function(e){delete nr[e]}}else{var pr=0,hr={};Jn=function(e){var t=pr++,n=setTimeout(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return hr[t]=n,t},Zn=function(e){var t=hr[e];delete hr[e],clearTimeout(t)}}function mr(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function vr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function gr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function yr(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function br(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function wr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function kr(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var xr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Cr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Tr,Sr=void 0,_r=(Tr=function(e,t){if(e.namespaceURI!==xr.svg||"innerHTML"in e)e.innerHTML=t;else{for((Sr=Sr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Sr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return Tr(e,t)})}:Tr);function Pr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Nr={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Or=["Webkit","ms","Moz","O"];function Mr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||Nr.hasOwnProperty(o)&&Nr[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Nr).forEach(function(e){Or.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Nr[t]=Nr[e]})});var Fr=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ir(e,t,n){t&&(Fr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function Rr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Lr=l.thatReturns("");function Ur(e,t){var n=jn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Fn("scroll",e);break;case"focus":case"blur":Fn("focus",e),Fn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&Fn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===de.indexOf(o)&&Mn(o,e)}n[o]=!0}}}function Ar(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===xr.html&&(r=Er(e)),r===xr.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function Dr(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function jr(e,t,n,r){var o=Rr(t,n);switch(t){case"iframe":case"object":Mn("load",e);var i=n;break;case"video":case"audio":for(i=0;i<de.length;i++)Mn(de[i],e);i=n;break;case"source":Mn("error",e),i=n;break;case"img":case"image":case"link":Mn("error",e),Mn("load",e),i=n;break;case"form":Mn("reset",e),Mn("submit",e),i=n;break;case"details":Mn("toggle",e),i=n;break;case"input":Ot(e,n),i=Nt(e,n),Mn("invalid",e),Ur(r,"onChange");break;case"option":i=mr(e,n);break;case"select":gr(e,n),i=a({},n,{value:void 0}),Mn("invalid",e),Ur(r,"onChange");break;case"textarea":br(e,n),i=yr(e,n),Mn("invalid",e),Ur(r,"onChange");break;default:i=n}Ir(t,i,Lr);var u,c=i;for(u in c)if(c.hasOwnProperty(u)){var s=c[u];"style"===u?Mr(e,s):"dangerouslySetInnerHTML"===u?null!=(s=s?s.__html:void 0)&&_r(e,s):"children"===u?"string"==typeof s?("textarea"!==t||""!==s)&&Pr(e,s):"number"==typeof s&&Pr(e,""+s):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(w.hasOwnProperty(u)?null!=s&&Ur(r,u):null!=s&&Pt(e,u,s,o))}switch(t){case"input":rt(e),It(e,n);break;case"textarea":rt(e),kr(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?vr(e,!!n.multiple,t,!1):null!=n.defaultValue&&vr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=l)}}function zr(e,t,n,r,o){var i=null;switch(t){case"input":n=Nt(e,n),r=Nt(e,r),i=[];break;case"option":n=mr(e,n),r=mr(e,r),i=[];break;case"select":n=a({},n,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":n=yr(e,n),r=yr(e,r),i=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=l)}Ir(t,r,Lr),t=e=void 0;var u=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var c=n[e];for(t in c)c.hasOwnProperty(t)&&(u||(u={}),u[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?i||(i=[]):(i=i||[]).push(e,null));for(e in r){var s=r[e];if(c=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&s!==c&&(null!=s||null!=c))if("style"===e)if(c){for(t in c)!c.hasOwnProperty(t)||s&&s.hasOwnProperty(t)||(u||(u={}),u[t]="");for(t in s)s.hasOwnProperty(t)&&c[t]!==s[t]&&(u||(u={}),u[t]=s[t])}else u||(i||(i=[]),i.push(e,u)),u=s;else"dangerouslySetInnerHTML"===e?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(e,""+s)):"children"===e?c===s||"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(e,""+s):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=s&&Ur(o,e),i||c===s||(i=[])):(i=i||[]).push(e,s))}return u&&(i=i||[]).push("style",u),i}function Br(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&Mt(e,o),Rr(n,r),r=Rr(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],l=t[i+1];"style"===a?Mr(e,l):"dangerouslySetInnerHTML"===a?_r(e,l):"children"===a?Pr(e,l):Pt(e,a,l,r)}switch(n){case"input":Ft(e,o);break;case"textarea":wr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?vr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?vr(e,!!o.multiple,o.defaultValue,!0):vr(e,!!o.multiple,o.multiple?[]:"",!1))}}function Vr(e,t,n,r,o){switch(t){case"iframe":case"object":Mn("load",e);break;case"video":case"audio":for(r=0;r<de.length;r++)Mn(de[r],e);break;case"source":Mn("error",e);break;case"img":case"image":case"link":Mn("error",e),Mn("load",e);break;case"form":Mn("reset",e),Mn("submit",e);break;case"details":Mn("toggle",e);break;case"input":Ot(e,n),Mn("invalid",e),Ur(o,"onChange");break;case"select":gr(e,n),Mn("invalid",e),Ur(o,"onChange");break;case"textarea":br(e,n),Mn("invalid",e),Ur(o,"onChange")}for(var i in Ir(t,n,Lr),r=null,n)if(n.hasOwnProperty(i)){var a=n[i];"children"===i?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):w.hasOwnProperty(i)&&null!=a&&Ur(o,i)}switch(t){case"input":rt(e),It(e,n);break;case"textarea":rt(e),kr(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=l)}return r}function Hr(e,t){return e.nodeValue!==t}var Wr={createElement:Ar,createTextNode:Dr,setInitialProperties:jr,diffProperties:zr,updateProperties:Br,diffHydratedProperties:Vr,diffHydratedText:Hr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(Ft(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=$(r);o||d("90"),ot(r),Ft(r,o)}}}break;case"textarea":wr(e,n);break;case"select":null!=(t=n.value)&&vr(e,!!n.multiple,t,!1)}}},$r=null,Kr=null;function Qr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function qr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Gr=Yn,Xr=Jn,Yr=Zn;function Jr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Zr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var eo=[],to=-1;function no(e){return{current:e}}function ro(e){0>to||(e.current=eo[to],eo[to]=null,to--)}function oo(e,t){eo[++to]=e.current,e.current=t}var io=no(f),ao=no(!1),lo=f;function uo(e){return so(e)?lo:io.current}function co(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function so(e){return 2===e.tag&&null!=e.type.childContextTypes}function fo(e){so(e)&&(ro(ao),ro(io))}function po(e){ro(ao),ro(io)}function ho(e,t,n){io.current!==f&&d("168"),oo(io,t),oo(ao,n)}function mo(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",bt(e)||"Unknown",o);return a({},t,n)}function vo(e){if(!so(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,lo=io.current,oo(io,t),oo(ao,ao.current),!0}function go(e,t){var n=e.stateNode;if(n||d("169"),t){var r=mo(e,lo);n.__reactInternalMemoizedMergedChildContext=r,ro(ao),ro(io),oo(io,r)}else ro(ao);oo(ao,t)}function yo(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function bo(e,t,n){var r=e.alternate;return null===r?((r=new yo(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function wo(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var i=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)i=5;else switch(r){case ct:return ko(e.children,t,n,o);case ht:i=11,t|=3;break;case st:i=11,t|=2;break;case ft:return(r=new yo(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case vt:i=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case dt:i=13;break e;case pt:i=12;break e;case mt:i=14;break e;default:d("130",null==r?r:typeof r,"")}i=void 0}}return(t=new yo(i,e,o,t)).type=r,t.expirationTime=n,t}function ko(e,t,n,r){return(e=new yo(10,e,r,t)).expirationTime=n,e}function xo(e,t,n){return(e=new yo(6,e,null,t)).expirationTime=n,e}function Eo(e,t,n){return(t=new yo(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Co(e,t,n){return e={current:t=new yo(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var To=null,So=null;function _o(e){return function(t){try{return e(t)}catch(e){}}}function Po(e){"function"==typeof To&&To(e)}function No(e){"function"==typeof So&&So(e)}var Oo=!1;function Mo(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Fo(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Io(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Ro(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function Lo(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,i=null;null===o&&(o=e.updateQueue=Mo(e.memoizedState))}else o=e.updateQueue,i=r.updateQueue,null===o?null===i?(o=e.updateQueue=Mo(e.memoizedState),i=r.updateQueue=Mo(r.memoizedState)):o=e.updateQueue=Fo(i):null===i&&(i=r.updateQueue=Fo(o));null===i||o===i?Ro(o,t,n):null===o.lastUpdate||null===i.lastUpdate?(Ro(o,t,n),Ro(i,t,n)):(Ro(o,t,n),i.lastUpdate=t)}function Uo(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=Mo(e.memoizedState):Ao(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Ao(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Fo(t)),t}function Do(e,t,n,r,o,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(i,r,o):e)||void 0===o)break;return a({},r,o);case 2:Oo=!0}return r}function jo(e,t,n,r,o){if(Oo=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var i=(t=Ao(e,t)).baseState,a=null,l=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s>o?(null===a&&(a=u,i=c),(0===l||l>s)&&(l=s)):(c=Do(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f>o?(null===s&&(s=u,null===a&&(i=c)),(0===l||l>f)&&(l=f)):(c=Do(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,t.expirationTime=l,e.memoizedState=c}}function zo(e,t){"function"!=typeof e&&d("191",e),e.call(t)}function Bo(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,zo(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,zo(t,n)),e=e.nextEffect}function Vo(e,t){return{value:e,source:t,stack:wt(t)}}var Ho=no(null),Wo=no(null),$o=no(0);function Ko(e){var t=e.type._context;oo($o,t._changedBits),oo(Wo,t._currentValue),oo(Ho,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Qo(e){var t=$o.current,n=Wo.current;ro(Ho),ro(Wo),ro($o),(e=e.type._context)._currentValue=n,e._changedBits=t}var qo={},Go=no(qo),Xo=no(qo),Yo=no(qo);function Jo(e){return e===qo&&d("174"),e}function Zo(e,t){oo(Yo,t),oo(Xo,e),oo(Go,qo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Cr(null,"");break;default:t=Cr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}ro(Go),oo(Go,t)}function ei(e){ro(Go),ro(Xo),ro(Yo)}function ti(e){Xo.current===e&&(ro(Go),ro(Xo))}function ni(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:a({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var ri={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===an(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ma(),o=Io(r=pa(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Lo(e,o,r),ha(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ma(),o=Io(r=pa(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Lo(e,o,r),ha(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ma(),r=Io(n=pa(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Lo(e,r,n),ha(e,n)}};function oi(e,t,n,r,o,i){var a=e.stateNode;return e=e.type,"function"==typeof a.shouldComponentUpdate?a.shouldComponentUpdate(n,o,i):!e.prototype||!e.prototype.isPureReactComponent||(!c(t,n)||!c(r,o))}function ii(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ai(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,i=uo(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=co(e,i),null!==(i=e.updateQueue)&&(jo(e,i,o,r,t),r.state=e.memoizedState),"function"==typeof(i=e.type.getDerivedStateFromProps)&&(ni(e,i,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&ri.enqueueReplaceState(r,r.state,null),null!==(i=e.updateQueue)&&(jo(e,i,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var li=Array.isArray;function ui(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&d("110"),r=n.stateNode),r||d("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&d("148"),n._owner||d("254",e)}return e}function ci(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function si(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=bo(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=xo(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=ui(e,t,n),r.return=e,r):((r=wo(n,e.mode,r)).ref=ui(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Eo(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function s(e,t,n,r,i){return null===t||10!==t.tag?((t=ko(n,e.mode,r,i)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=xo(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case lt:return(n=wo(t,e.mode,n)).ref=ui(e,null,t),n.return=e,n;case ut:return(t=Eo(t,e.mode,n)).return=e,t}if(li(t)||yt(t))return(t=ko(t,e.mode,n,null)).return=e,t;ci(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case lt:return n.key===o?n.type===ct?s(e,t,n.props.children,r,o):u(e,t,n,r):null;case ut:return n.key===o?c(e,t,n,r):null}if(li(n)||yt(n))return null!==o?null:s(e,t,n,r,null);ci(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case lt:return e=e.get(null===r.key?n:r.key)||null,r.type===ct?s(t,e,r.props.children,o,r.key):u(t,e,r,o);case ut:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(li(r)||yt(r))return s(t,e=e.get(n)||null,r,o,null);ci(t,r)}return null}function m(o,a,l,u){for(var c=null,s=null,d=a,m=a=0,v=null;null!==d&&m<l.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var g=p(o,d,l[m],u);if(null===g){null===d&&(d=v);break}e&&d&&null===g.alternate&&t(o,d),a=i(g,a,m),null===s?c=g:s.sibling=g,s=g,d=v}if(m===l.length)return n(o,d),c;if(null===d){for(;m<l.length;m++)(d=f(o,l[m],u))&&(a=i(d,a,m),null===s?c=d:s.sibling=d,s=d);return c}for(d=r(o,d);m<l.length;m++)(v=h(d,o,m,l[m],u))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v);return e&&d.forEach(function(e){return t(o,e)}),c}function v(o,a,l,u){var c=yt(l);"function"!=typeof c&&d("150"),null==(l=c.call(l))&&d("151");for(var s=c=null,m=a,v=a=0,g=null,y=l.next();null!==m&&!y.done;v++,y=l.next()){m.index>v?(g=m,m=null):g=m.sibling;var b=p(o,m,y.value,u);if(null===b){m||(m=g);break}e&&m&&null===b.alternate&&t(o,m),a=i(b,a,v),null===s?c=b:s.sibling=b,s=b,m=g}if(y.done)return n(o,m),c;if(null===m){for(;!y.done;v++,y=l.next())null!==(y=f(o,y.value,u))&&(a=i(y,a,v),null===s?c=y:s.sibling=y,s=y);return c}for(m=r(o,m);!y.done;v++,y=l.next())null!==(y=h(m,o,v,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),a=i(y,a,v),null===s?c=y:s.sibling=y,s=y);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,i,l){"object"==typeof i&&null!==i&&i.type===ct&&null===i.key&&(i=i.props.children);var u="object"==typeof i&&null!==i;if(u)switch(i.$$typeof){case lt:e:{var c=i.key;for(u=r;null!==u;){if(u.key===c){if(10===u.tag?i.type===ct:u.type===i.type){n(e,u.sibling),(r=o(u,i.type===ct?i.props.children:i.props,l)).ref=ui(e,u,i),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}i.type===ct?((r=ko(i.props.children,e.mode,l,i.key)).return=e,e=r):((l=wo(i,e.mode,l)).ref=ui(e,r,i),l.return=e,e=l)}return a(e);case ut:e:{for(u=i.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[],l)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Eo(i,e.mode,l)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i,l)).return=e,e=r):(n(e,r),(r=xo(i,e.mode,l)).return=e,e=r),a(e);if(li(i))return m(e,r,i,l);if(yt(i))return v(e,r,i,l);if(u&&ci(e,i),void 0===i)switch(e.tag){case 2:case 1:d("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var fi=si(!0),di=si(!1),pi=null,hi=null,mi=!1;function vi(e,t){var n=new yo(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function gi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function yi(e){if(mi){var t=hi;if(t){var n=t;if(!gi(e,t)){if(!(t=Jr(n))||!gi(e,t))return e.effectTag|=2,mi=!1,void(pi=e);vi(pi,n)}pi=e,hi=Zr(t)}else e.effectTag|=2,mi=!1,pi=e}}function bi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;pi=e}function wi(e){if(e!==pi)return!1;if(!mi)return bi(e),mi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!qr(t,e.memoizedProps))for(t=hi;t;)vi(e,t),t=Jr(t);return bi(e),hi=pi?Jr(e.stateNode):null,!0}function ki(){hi=pi=null,mi=!1}function xi(e,t,n){Ei(e,t,n,t.expirationTime)}function Ei(e,t,n,r){t.child=null===e?di(t,null,n,r):fi(t,e.child,n,r)}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ti(e,t,n,r,o){Ci(e,t);var i=0!=(64&t.effectTag);if(!n&&!i)return r&&go(t,!1),Pi(e,t);n=t.stateNode,it.current=t;var a=i?null:n.render();return t.effectTag|=1,i&&(Ei(e,t,null,o),t.child=null),Ei(e,t,a,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&go(t,!0),t.child}function Si(e){var t=e.stateNode;t.pendingContext?ho(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ho(0,t.context,!1),Zo(e,t.containerInfo)}function _i(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var i=0|o.stateNode;if(o.type===t&&0!=(i&n)){for(i=o;null!==i;){var a=i.alternate;if(0===i.expirationTime||i.expirationTime>r)i.expirationTime=r,null!==a&&(0===a.expirationTime||a.expirationTime>r)&&(a.expirationTime=r);else{if(null===a||!(0===a.expirationTime||a.expirationTime>r))break;a.expirationTime=r}i=i.return}i=null}else i=o.child;break;case 13:i=o.type===e.type?null:o.child;break;default:i=o.child}if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===e){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}}function Pi(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=bo(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=bo(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ni(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Si(t);break;case 2:vo(t);break;case 4:Zo(t,t.stateNode.containerInfo);break;case 13:Ko(t)}return null}switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,i=uo(t);return r=r(o,i=co(t,i)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(i=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(i=i.getDerivedStateFromProps)&&ni(t,i,o),o=vo(t),r.updater=ri,t.stateNode=r,r._reactInternalFiber=t,ai(t,n),e=Ti(e,t,!0,o,n)):(t.tag=1,xi(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,ao.current||t.memoizedProps!==n?(o=o(n,r=co(t,r=uo(t))),t.effectTag|=1,xi(e,t,o),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 2:if(o=vo(t),null===e)if(null===t.stateNode){var a=t.pendingProps,l=t.type;r=uo(t);var u=2===t.tag&&null!=t.type.contextTypes;a=new l(a,i=u?co(t,r):f),t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,a.updater=ri,t.stateNode=a,a._reactInternalFiber=t,u&&((u=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,u.__reactInternalMemoizedMaskedChildContext=i),ai(t,n),r=!0}else{l=t.type,r=t.stateNode,u=t.memoizedProps,i=t.pendingProps,r.props=u;var c=r.context;a=co(t,a=uo(t));var s=l.getDerivedStateFromProps;(l="function"==typeof s||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(u!==i||c!==a)&&ii(t,r,i,a),Oo=!1;var p=t.memoizedState;c=r.state=p;var h=t.updateQueue;null!==h&&(jo(t,h,i,r,n),c=t.memoizedState),u!==i||p!==c||ao.current||Oo?("function"==typeof s&&(ni(t,s,i),c=t.memoizedState),(u=Oo||oi(t,u,i,p,c,a))?(l||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=i,t.memoizedState=c),r.props=i,r.state=c,r.context=a,r=u):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.type,r=t.stateNode,i=t.memoizedProps,u=t.pendingProps,r.props=i,c=r.context,a=co(t,a=uo(t)),(l="function"==typeof(s=l.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(i!==u||c!==a)&&ii(t,r,u,a),Oo=!1,c=t.memoizedState,p=r.state=c,null!==(h=t.updateQueue)&&(jo(t,h,u,r,n),p=t.memoizedState),i!==u||c!==p||ao.current||Oo?("function"==typeof s&&(ni(t,s,u),p=t.memoizedState),(s=Oo||oi(t,i,u,c,p,a))?(l||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(u,p,a),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(u,p,a)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=u,t.memoizedState=p),r.props=u,r.state=p,r.context=a,r=s):("function"!=typeof r.componentDidUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return Ti(e,t,r,o,n);case 3:return Si(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,jo(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(ki(),e=Pi(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(hi=Zr(t.stateNode.containerInfo),pi=t,r=mi=!0),r?(t.effectTag|=2,t.child=di(t,null,o,n)):(ki(),xi(e,t,o)),e=t.child)):(ki(),e=Pi(e,t)),e;case 5:return Jo(Yo.current),(o=Jo(Go.current))!==(r=Cr(o,t.type))&&(oo(Xo,t),oo(Go,r)),null===e&&yi(t),o=t.type,u=t.memoizedProps,r=t.pendingProps,i=null!==e?e.memoizedProps:null,ao.current||u!==r||((u=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),u&&1073741823===n)?(u=r.children,qr(o,r)?u=null:i&&qr(o,i)&&(t.effectTag|=16),Ci(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(xi(e,t,u),t.memoizedProps=r,e=t.child)):e=Pi(e,t),e;case 6:return null===e&&yi(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return Zo(t,t.stateNode.containerInfo),o=t.pendingProps,ao.current||t.memoizedProps!==o?(null===e?t.child=fi(t,null,o,n):xi(e,t,o),t.memoizedProps=o,e=t.child):e=Pi(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,ao.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(xi(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 10:return n=t.pendingProps,ao.current||t.memoizedProps!==n?(xi(e,t,n),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 11:return n=t.pendingProps.children,ao.current||null!==n&&t.memoizedProps!==n?(xi(e,t,n),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=Pi(e,t):(xi(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=!0;if(ao.current)a=!1;else if(i===o)return t.stateNode=0,Ko(t),Pi(e,t);var l=o.value;if(t.memoizedProps=o,null===i)l=1073741823;else if(i.value===o.value){if(i.children===o.children&&a)return t.stateNode=0,Ko(t),Pi(e,t);l=0}else{var u=i.value;if(u===l&&(0!==u||1/u==1/l)||u!=u&&l!=l){if(i.children===o.children&&a)return t.stateNode=0,Ko(t),Pi(e,t);l=0}else if(l="function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823,0==(l|=0)){if(i.children===o.children&&a)return t.stateNode=0,Ko(t),Pi(e,t)}else _i(t,r,l,n)}return t.stateNode=l,Ko(t),xi(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,i=t.pendingProps,u=t.memoizedProps,o=r._currentValue,a=r._changedBits,ao.current||0!==a||u!==i){if(t.memoizedProps=i,void 0!==(l=i.unstable_observedBits)&&null!==l||(l=1073741823),t.stateNode=l,0!=(a&l))_i(t,r,a,n);else if(u===i){e=Pi(e,t);break e}n=(n=i.children)(o),t.effectTag|=1,xi(e,t,n),e=t.child}else e=Pi(e,t);return e;default:d("156")}}function Oi(e){e.effectTag|=4}var Mi=void 0,Fi=void 0,Ii=void 0;function Ri(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return fo(t),null;case 3:ei(),po();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(wi(t),t.effectTag&=-3),Mi(t),null;case 5:ti(t),r=Jo(Yo.current);var o=t.type;if(null!==e&&null!=t.stateNode){var i=e.memoizedProps,a=t.stateNode,l=Jo(Go.current);a=zr(a,o,i,n,r),Fi(e,t,a,o,i,n,r,l),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&d("166"),null;if(e=Jo(Go.current),wi(t))n=t.stateNode,o=t.type,i=t.memoizedProps,n[B]=t,n[V]=i,r=Vr(n,o,i,e,r),t.updateQueue=r,null!==r&&Oi(t);else{(e=Ar(o,n,r,e))[B]=t,e[V]=n;e:for(i=t.child;null!==i;){if(5===i.tag||6===i.tag)e.appendChild(i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}jr(e,o,n,r),Qr(o,n)&&Oi(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Ii(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&d("166"),null;r=Jo(Yo.current),Jo(Go.current),wi(t)?(r=t.stateNode,n=t.memoizedProps,r[B]=t,Hr(r,n)&&Oi(t)):((r=Dr(n,r))[B]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return ei(),Mi(t),null;case 13:return Qo(t),null;case 12:return null;case 0:d("167");default:d("156")}}function Li(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Ui(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){fa(e,t)}else t.current=null}function Ai(e){switch(No(e),e.tag){case 2:Ui(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){fa(e,t)}break;case 5:Ui(e);break;case 4:zi(e)}}function Di(e){return 5===e.tag||3===e.tag||4===e.tag}function ji(e){e:{for(var t=e.return;null!==t;){if(Di(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(Pr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||Di(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,a=o.stateNode,l=n;8===i.nodeType?i.parentNode.insertBefore(a,l):i.insertBefore(a,l)}else t.insertBefore(o.stateNode,n);else r?(i=t,a=o.stateNode,8===i.nodeType?i.parentNode.insertBefore(a,i):i.appendChild(a)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function zi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,a=i;;)if(Ai(a),null!==a.child&&4!==a.tag)a.child.return=a,a=a.child;else{if(a===i)break;for(;null===a.sibling;){if(null===a.return||a.return===i)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:Ai(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Bi(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&(n[V]=r,Br(n,i,o,e,r))}break;case 6:null===t.stateNode&&d("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:d("163")}}function Vi(e,t,n){(n=Io(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){qa(r),Li(e,t)},n}function Hi(e,t,n){(n=Io(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===aa?aa=new Set([this]):aa.add(this);var n=t.value,r=t.stack;Li(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Wi(e,t,n,r,o,i){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=Vo(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void Uo(e,r=Vi(e,r,i),i);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===aa||!aa.has(n)))return e.effectTag|=1024,void Uo(e,r=Hi(e,t,i),i)}e=e.return}while(null!==e)}function $i(e){switch(e.tag){case 2:fo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return ei(),po(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return ti(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return ei(),null;case 13:return Qo(e),null;default:return null}}Mi=function(){},Fi=function(e,t,n){(t.updateQueue=n)&&Oi(t)},Ii=function(e,t,n,r){n!==r&&Oi(t)};var Ki=Gr(),Qi=2,qi=Ki,Gi=0,Xi=0,Yi=!1,Ji=null,Zi=null,ea=0,ta=-1,na=!1,ra=null,oa=!1,ia=!1,aa=null;function la(){if(null!==Ji)for(var e=Ji.return;null!==e;){var t=e;switch(t.tag){case 2:fo(t);break;case 3:ei(),po();break;case 5:ti(t);break;case 4:ei();break;case 13:Qo(t)}e=e.return}Zi=null,ea=0,ta=-1,na=!1,Ji=null,ia=!1}function ua(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=Ri(t,e);var o=e;if(1073741823===ea||1073741823!==o.expirationTime){var i=0;switch(o.tag){case 3:case 2:var a=o.updateQueue;null!==a&&(i=a.expirationTime)}for(a=o.child;null!==a;)0!==a.expirationTime&&(0===i||i>a.expirationTime)&&(i=a.expirationTime),a=a.sibling;o.expirationTime=i}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ia=!0;break}e=n}else{if(null!==(e=$i(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function ca(e){var t=Ni(e.alternate,e,ea);return null===t&&(t=ua(e)),it.current=null,t}function sa(e,t,n){Yi&&d("243"),Yi=!0,t===ea&&e===Zi&&null!==Ji||(la(),ea=t,ta=-1,Ji=bo((Zi=e).current,null,ea),e.pendingCommitExpirationTime=0);var r=!1;for(na=!n||ea<=Qi;;){try{if(n)for(;null!==Ji&&!Qa();)Ji=ca(Ji);else for(;null!==Ji;)Ji=ca(Ji)}catch(t){if(null===Ji)r=!0,qa(t);else{null===Ji&&d("271");var o=(n=Ji).return;if(null===o){r=!0,qa(t);break}Wi(e,o,n,t,0,ea),Ji=ua(n)}}break}if(Yi=!1,r)return null;if(null===Ji){if(ia)return e.pendingCommitExpirationTime=t,e.current.alternate;na&&d("262"),0<=ta&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&Da(e,t)},ta),function(e){null===Ea&&d("246"),Ea.remainingExpirationTime=e}(e.current.expirationTime)}return null}function fa(e,t){var n;e:{for(Yi&&!oa&&d("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===aa||!aa.has(r))){Lo(n,e=Hi(n,e=Vo(t,e),1),1),ha(n,1),n=void 0;break e}break;case 3:Lo(n,e=Vi(n,e=Vo(t,e),1),1),ha(n,1),n=void 0;break e}n=n.return}3===e.tag&&(Lo(e,n=Vi(e,n=Vo(t,e),1),1),ha(e,1)),n=void 0}return n}function da(){var e=2+25*(1+((ma()-2+500)/25|0));return e<=Gi&&(e=Gi+1),Gi=e}function pa(e,t){return e=0!==Xi?Xi:Yi?oa?1:ea:1&t.mode?Fa?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,Fa&&(0===Ta||e>Ta)&&(Ta=e),e}function ha(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!Yi&&0!==ea&&t<ea&&la();var r=n.current.expirationTime;Yi&&!oa&&Zi===n||Da(n,r),La>Ra&&d("185")}e=e.return}}function ma(){return qi=Gr()-Ki,Qi=2+(qi/10|0)}function va(e){var t=Xi;Xi=2+25*(1+((ma()-2+500)/25|0));try{return e()}finally{Xi=t}}function ga(e,t,n,r,o){var i=Xi;Xi=1;try{return e(t,n,r,o)}finally{Xi=i}}var ya=null,ba=null,wa=0,ka=-1,xa=!1,Ea=null,Ca=0,Ta=0,Sa=!1,_a=!1,Pa=null,Na=null,Oa=!1,Ma=!1,Fa=!1,Ia=null,Ra=1e3,La=0,Ua=1;function Aa(e){if(0!==wa){if(e>wa)return;Yr(ka)}var t=Gr()-Ki;wa=e,ka=Xr(za,{timeout:10*(e-2)-t})}function Da(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===ba?(ya=ba=e,e.nextScheduledRoot=e):(ba=ba.nextScheduledRoot=e).nextScheduledRoot=ya;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}xa||(Oa?Ma&&(Ea=e,Ca=1,$a(e,1,!1)):1===t?Ba():Aa(t))}function ja(){var e=0,t=null;if(null!==ba)for(var n=ba,r=ya;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===ba)&&d("244"),r===r.nextScheduledRoot){ya=ba=r.nextScheduledRoot=null;break}if(r===ya)ya=o=r.nextScheduledRoot,ba.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ba){(ba=n).nextScheduledRoot=ya,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===ba)break;n=r,r=r.nextScheduledRoot}}null!==(n=Ea)&&n===t&&1===e?La++:La=0,Ea=t,Ca=e}function za(e){Va(0,!0,e)}function Ba(){Va(1,!1,null)}function Va(e,t,n){if(Na=n,ja(),t)for(;null!==Ea&&0!==Ca&&(0===e||e>=Ca)&&(!Sa||ma()>=Ca);)ma(),$a(Ea,Ca,!Sa),ja();else for(;null!==Ea&&0!==Ca&&(0===e||e>=Ca);)$a(Ea,Ca,!1),ja();null!==Na&&(wa=0,ka=-1),0!==Ca&&Aa(Ca),Na=null,Sa=!1,Wa()}function Ha(e,t){xa&&d("253"),Ea=e,Ca=t,$a(e,t,!1),Ba(),Wa()}function Wa(){if(La=0,null!==Ia){var e=Ia;Ia=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){_a||(_a=!0,Pa=e)}}}if(_a)throw e=Pa,Pa=null,_a=!1,e}function $a(e,t,n){xa&&d("245"),xa=!0,n?null!==(n=e.finishedWork)?Ka(e,n,t):(e.finishedWork=null,null!==(n=sa(e,t,!0))&&(Qa()?e.finishedWork=n:Ka(e,n,t))):null!==(n=e.finishedWork)?Ka(e,n,t):(e.finishedWork=null,null!==(n=sa(e,t,!1))&&Ka(e,n,t)),xa=!1}function Ka(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Ia?Ia=[r]:Ia.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,oa=Yi=!0,(n=t.stateNode).current===t&&d("177"),0===(r=n.pendingCommitExpirationTime)&&d("261"),n.pendingCommitExpirationTime=0,ma(),it.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;$r=Nn;var i=u();if(Vn(i)){if("selectionStart"in i)var a={start:i.selectionStart,end:i.selectionEnd};else e:{var l=window.getSelection&&window.getSelection();if(l&&0!==l.rangeCount){a=l.anchorNode;var c=l.anchorOffset,f=l.focusNode;l=l.focusOffset;try{a.nodeType,f.nodeType}catch(e){a=null;break e}var p=0,h=-1,m=-1,v=0,g=0,y=i,b=null;t:for(;;){for(var w;y!==a||0!==c&&3!==y.nodeType||(h=p+c),y!==f||0!==l&&3!==y.nodeType||(m=p+l),3===y.nodeType&&(p+=y.nodeValue.length),null!==(w=y.firstChild);)b=y,y=w;for(;;){if(y===i)break t;if(b===a&&++v===c&&(h=p),b===f&&++g===l&&(m=p),null!==(w=y.nextSibling))break;b=(y=b).parentNode}y=w}a=-1===h||-1===m?null:{start:h,end:m}}else a=null}a=a||{start:0,end:0}}else a=null;for(Kr={focusedElem:i,selectionRange:a},On(!1),ra=o;null!==ra;){i=!1,a=void 0;try{for(;null!==ra;){if(256&ra.effectTag){var k=ra.alternate;switch((c=ra).tag){case 2:if(256&c.effectTag&&null!==k){var x=k.memoizedProps,E=k.memoizedState,C=c.stateNode;C.props=c.memoizedProps,C.state=c.memoizedState;var T=C.getSnapshotBeforeUpdate(x,E);C.__reactInternalSnapshotBeforeUpdate=T}break;case 3:case 5:case 6:case 4:break;default:d("163")}}ra=ra.nextEffect}}catch(e){i=!0,a=e}i&&(null===ra&&d("178"),fa(ra,a),null!==ra&&(ra=ra.nextEffect))}for(ra=o;null!==ra;){k=!1,x=void 0;try{for(;null!==ra;){var S=ra.effectTag;if(16&S&&Pr(ra.stateNode,""),128&S){var _=ra.alternate;if(null!==_){var P=_.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&S){case 2:ji(ra),ra.effectTag&=-3;break;case 6:ji(ra),ra.effectTag&=-3,Bi(ra.alternate,ra);break;case 4:Bi(ra.alternate,ra);break;case 8:zi(E=ra),E.return=null,E.child=null,E.alternate&&(E.alternate.child=null,E.alternate.return=null)}ra=ra.nextEffect}}catch(e){k=!0,x=e}k&&(null===ra&&d("178"),fa(ra,x),null!==ra&&(ra=ra.nextEffect))}if(P=Kr,_=u(),S=P.focusedElem,k=P.selectionRange,_!==S&&s(document.documentElement,S)){Vn(S)&&(_=k.start,void 0===(P=k.end)&&(P=_),"selectionStart"in S?(S.selectionStart=_,S.selectionEnd=Math.min(P,S.value.length)):window.getSelection&&(_=window.getSelection(),x=S[he()].length,P=Math.min(k.start,x),k=void 0===k.end?P:Math.min(k.end,x),!_.extend&&P>k&&(x=k,k=P,P=x),x=Bn(S,P),E=Bn(S,k),x&&E&&(1!==_.rangeCount||_.anchorNode!==x.node||_.anchorOffset!==x.offset||_.focusNode!==E.node||_.focusOffset!==E.offset)&&((C=document.createRange()).setStart(x.node,x.offset),_.removeAllRanges(),P>k?(_.addRange(C),_.extend(E.node,E.offset)):(C.setEnd(E.node,E.offset),_.addRange(C))))),_=[];for(P=S;P=P.parentNode;)1===P.nodeType&&_.push({element:P,left:P.scrollLeft,top:P.scrollTop});for(S.focus(),S=0;S<_.length;S++)(P=_[S]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for(Kr=null,On($r),$r=null,n.current=t,ra=o;null!==ra;){o=!1,S=void 0;try{for(_=r;null!==ra;){var N=ra.effectTag;if(36&N){var O=ra.alternate;switch(k=_,(P=ra).tag){case 2:var M=P.stateNode;if(4&P.effectTag)if(null===O)M.props=P.memoizedProps,M.state=P.memoizedState,M.componentDidMount();else{var F=O.memoizedProps,I=O.memoizedState;M.props=P.memoizedProps,M.state=P.memoizedState,M.componentDidUpdate(F,I,M.__reactInternalSnapshotBeforeUpdate)}var R=P.updateQueue;null!==R&&(M.props=P.memoizedProps,M.state=P.memoizedState,Bo(P,R,M));break;case 3:var L=P.updateQueue;if(null!==L){if(x=null,null!==P.child)switch(P.child.tag){case 5:x=P.child.stateNode;break;case 2:x=P.child.stateNode}Bo(P,L,x)}break;case 5:var U=P.stateNode;null===O&&4&P.effectTag&&Qr(P.type,P.memoizedProps)&&U.focus();break;case 6:case 4:case 15:case 16:break;default:d("163")}}if(128&N){P=void 0;var A=ra.ref;if(null!==A){var D=ra.stateNode;switch(ra.tag){case 5:P=D;break;default:P=D}"function"==typeof A?A(P):A.current=P}}var j=ra.nextEffect;ra.nextEffect=null,ra=j}}catch(e){o=!0,S=e}o&&(null===ra&&d("178"),fa(ra,S),null!==ra&&(ra=ra.nextEffect))}Yi=oa=!1,Po(t.stateNode),0===(t=n.current.expirationTime)&&(aa=null),e.remainingExpirationTime=t}function Qa(){return!(null===Na||Na.timeRemaining()>Ua)&&(Sa=!0)}function qa(e){null===Ea&&d("246"),Ea.remainingExpirationTime=0,_a||(_a=!0,Pa=e)}function Ga(e,t){var n=Oa;Oa=!0;try{return e(t)}finally{(Oa=n)||xa||Ba()}}function Xa(e,t){if(Oa&&!Ma){Ma=!0;try{return e(t)}finally{Ma=!1}}return e(t)}function Ya(e,t){xa&&d("187");var n=Oa;Oa=!0;try{return ga(e,t)}finally{Oa=n,Ba()}}function Ja(e){var t=Oa;Oa=!0;try{ga(e)}finally{(Oa=t)||xa||Va(1,!1,null)}}function Za(e,t,n,r,o){var i=t.current;if(n){var a;n=n._reactInternalFiber;e:{for(2===an(n)&&2===n.tag||d("170"),a=n;3!==a.tag;){if(so(a)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}(a=a.return)||d("171")}a=a.stateNode.context}n=so(n)?mo(n,a):a}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Io(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Lo(i,o,r),ha(i,r),r}function el(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?d("188"):d("268",Object.keys(e))),null===(e=cn(t))?null:e.stateNode}function tl(e,t,n,r){var o=t.current;return Za(e,t,n,o=pa(ma(),o),r)}function nl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function rl(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);To=_o(function(e){return t.onCommitFiberRoot(n,e)}),So=_o(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(a({},e,{findHostInstanceByFiber:function(e){return null===(e=cn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var ol=Ga,il=function(e,t,n){if(Fa)return e(t,n);Oa||xa||0===Ta||(Va(Ta,!1,null),Ta=0);var r=Fa,o=Oa;Oa=Fa=!0;try{return e(t,n)}finally{Fa=r,(Oa=o)||xa||Ba()}},al=function(){xa||0===Ta||(Va(Ta,!1,null),Ta=0)};function ll(e){this._expirationTime=da(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function ul(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function cl(e,t,n){this._internalRoot=Co(e,t,n)}function sl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function fl(e,t,n,r,o){sl(n)||d("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=nl(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new cl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=nl(i._internalRoot);l.call(e)}}Xa(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return nl(i._internalRoot)}function dl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return sl(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ut,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}je.injectFiberControlledHostComponent(Wr),ll.prototype.render=function(e){this._defer||d("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new ul;return Za(e,t,null,n,r._onCommit),r},ll.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ll.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||d("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&d("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ha(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},ll.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},ul.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ul.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&d("191",n),n()}}},cl.prototype.render=function(e,t){var n=this._internalRoot,r=new ul;return null!==(t=void 0===t?null:t)&&r.then(t),tl(e,n,null,r._onCommit),r},cl.prototype.unmount=function(e){var t=this._internalRoot,n=new ul;return null!==(e=void 0===e?null:e)&&n.then(e),tl(null,t,null,n._onCommit),n},cl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new ul;return null!==(n=void 0===n?null:n)&&o.then(n),tl(t,r,e,o._onCommit),o},cl.prototype.createBatch=function(){var e=new ll(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Qe=ol,qe=il,Ge=al;var pl={createPortal:dl,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:el(e)},hydrate:function(e,t,n){return fl(null,e,t,!0,n)},render:function(e,t,n){return fl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),fl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return sl(e)||d("40"),!!e._reactRootContainer&&(Xa(function(){fl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return dl.apply(void 0,arguments)},unstable_batchedUpdates:Ga,unstable_deferredUpdates:va,flushSync:Ya,unstable_flushControlled:Ja,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:j,EventPluginRegistry:C,EventPropagators:ne,ReactControlledComponent:Ke,ReactDOMComponentTree:K,ReactDOMEventListener:Ln},unstable_createRoot:function(e,t){return new cl(e,!0,null!=t&&!0===t.hydrate)}};rl({findFiberByHostInstance:H,bundleType:0,version:"16.4.0",rendererPackageName:"react-dom"});var hl={default:pl},ml=hl&&pl||hl;e.exports=ml.default?ml.default:ml},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(25)},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(4),o=n(3),i=n(2),a=n(1),l="function"==typeof Symbol&&Symbol.for,u=l?Symbol.for("react.element"):60103,c=l?Symbol.for("react.portal"):60106,s=l?Symbol.for("react.fragment"):60107,f=l?Symbol.for("react.strict_mode"):60108,d=l?Symbol.for("react.profiler"):60114,p=l?Symbol.for("react.provider"):60109,h=l?Symbol.for("react.context"):60110,m=l?Symbol.for("react.async_mode"):60111,v=l?Symbol.for("react.forward_ref"):60112;l&&Symbol.for("react.timeout");var g="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=i,this.updater=n||b}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=i,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&y("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var C={current:null},T=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r=void 0,o={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)T.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var l=arguments.length-2;if(1===l)o.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===o[r]&&(o[r]=l[r]);return{$$typeof:u,type:e,key:i,ref:a,props:o,_owner:C.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===u}var N=/\/+/g,O=[];function M(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function F(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function I(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var i=!1;if(null===e)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case u:case c:i=!0}}if(i)return n(r,e,""===t?"."+R(e,0):t),1;if(i=0,t=""===t?".":t+":",Array.isArray(e))for(var a=0;a<e.length;a++){var l=t+R(o=e[a],a);i+=I(o,l,n,r)}else if(null===e||void 0===e?l=null:l="function"==typeof(l=g&&e[g]||e["@@iterator"])?l:null,"function"==typeof l)for(e=l.call(e),a=0;!(o=e.next()).done;)i+=I(o=o.value,l=t+R(o,a++),n,r);else"object"===o&&y("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return i}function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function U(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?A(e,r,n,a.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n,e={$$typeof:u,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function A(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(N,"$&/")+"/"),t=M(t,i,r,o),null==e||I(e,"",U,t),F(t)}var D={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return A(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=M(null,null,t,n),null==e||I(e,"",L,t),F(t)},count:function(e){return null==e?0:I(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return A(e,t,null,a.thatReturnsArgument),t},only:function(e){return P(e)||y("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:p,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:v,render:e}},Fragment:s,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:d,createElement:_,cloneElement:function(e,t,n){(null===e||void 0===e)&&y("267",e);var o=void 0,i=r({},e.props),a=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=C.current),void 0!==t.key&&(a=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)T.call(t,o)&&!S.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:u,type:e.type,key:a,ref:l,props:i,_owner:c}},createFactory:function(e){var t=_.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},j={default:D},z=j&&D||j;e.exports=z.default?z.default:z},function(e,t,n){"use strict";var r=a(n(0)),o=a(n(26)),i=a(n(18));function a(e){return e&&e.__esModule?e:{default:e}}n(9),o.default.render(r.default.createElement(i.default,null),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,